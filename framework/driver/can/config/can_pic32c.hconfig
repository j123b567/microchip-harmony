enum CAN_TIMESTAMP_MODES
       "CAN_TIMESTAMP_MODE_ZERO"
    || "CAN_TIMESTAMP_MODE_TCP_INC"
    || "CAN_TIMESTAMP_MODE_EXT_INC"

enum CAN_TIMEOUT_MODES
       "CAN_TIMEOUT_MODE_CONTINUOUS"
    || "CAN_TIMEOUT_MODE_TX_EVENT"
    || "CAN_TIMEOUT_MODE_RX0_EVENT"
    || "CAN_TIMEOUT_MODE_RX1_EVENT"

enum CAN_CHANNEL
       "CAN_CHANNEL0"
    || "CAN_CHANNEL1"
    || "CAN_CHANNEL2"
    || "CAN_CHANNEL3"

enum CAN_BAUDRATES
       "CAN_BAUD_125K"
    || "CAN_BAUD_250K"
    || "CAN_BAUD_500K"
    || "CAN_BAUD_1M"

enum CAN_OPERATION_MODES
       "CAN_CONFIGURATION_MODE"
    || "CAN_NORMAL_MODE"
    || "CAN_FD_MODE"
    || "CAN_RESTRICTED_MODE"
    || "CAN_MONITOR_MODE"
    || "CAN_EXTERNAL_LOOPBACK_MODE"
    || "CAN_INTERNAL_LOOPBACK_MODE"

enum CAN_CHANNEL_EVENT
       "CAN_RX_CHANNEL_NOT_EMPTY"
    || "CAN_RX_CHANNEL_HALF_FULL"
    || "CAN_RX_CHANNEL_FULL"
    || "CAN_RX_CHANNEL_OVERFLOW"
    || "CAN_RX_CHANNEL_ANY_EVENT"
    || "CAN_TX_CHANNEL_EMPTY"
    || "CAN_TX_CHANNEL_HALF_EMPTY"
    || "CAN_TX_CHANNEL_NOT_FULL"
    || "CAN_TX_CHANNEL_ANY_EVENT"

enum CAN_BAUD_RATE_PRESCALE
       "CAN_BAUD_RATE_PRESCALE_1"
    || "CAN_BAUD_RATE_PRESCALE_2"
    || "CAN_BAUD_RATE_PRESCALE_3"
    || "CAN_BAUD_RATE_PRESCALE_4"
    || "CAN_BAUD_RATE_PRESCALE_5"
    || "CAN_BAUD_RATE_PRESCALE_6"
    || "CAN_BAUD_RATE_PRESCALE_7"
    || "CAN_BAUD_RATE_PRESCALE_8"
    || "CAN_BAUD_RATE_PRESCALE_9"
    || "CAN_BAUD_RATE_PRESCALE_10"
    || "CAN_BAUD_RATE_PRESCALE_11"
    || "CAN_BAUD_RATE_PRESCALE_12"
    || "CAN_BAUD_RATE_PRESCALE_13"
    || "CAN_BAUD_RATE_PRESCALE_14"
    || "CAN_BAUD_RATE_PRESCALE_15"
    || "CAN_BAUD_RATE_PRESCALE_16"
    || "CAN_BAUD_RATE_PRESCALE_17"
    || "CAN_BAUD_RATE_PRESCALE_18"
    || "CAN_BAUD_RATE_PRESCALE_19"
    || "CAN_BAUD_RATE_PRESCALE_20"
    || "CAN_BAUD_RATE_PRESCALE_21"
    || "CAN_BAUD_RATE_PRESCALE_22"
    || "CAN_BAUD_RATE_PRESCALE_23"
    || "CAN_BAUD_RATE_PRESCALE_24"
    || "CAN_BAUD_RATE_PRESCALE_25"
    || "CAN_BAUD_RATE_PRESCALE_26"
    || "CAN_BAUD_RATE_PRESCALE_27"
    || "CAN_BAUD_RATE_PRESCALE_28"
    || "CAN_BAUD_RATE_PRESCALE_29"
    || "CAN_BAUD_RATE_PRESCALE_30"
    || "CAN_BAUD_RATE_PRESCALE_31"


enum CAN_TX_RTR
       "CAN_TX_RTR_ENABLED"
    || "CAN_TX_RTR_DISABLED"

enum CAN_RX_DATA_MODE
       "CAN_RX_DATA_ONLY"
    || "CAN_RX_FULL_RECEIVE"


enum CAN_FILTER_MASK_TYPE
       "CAN_FILTER_MASK_IDE_TYPE"
    || "CAN_FILTER_MASK_ANY_TYPE"


enum CAN_MODULE_EVENT
       "CAN_TX_EVENT"
    || "CAN_RX_EVENT"
    || "CAN_TIMESTAMP_TIMER_OVERFLOW_EVENT"
    || "CAN_OPERATION_MODE_CHANGE_EVENT"
    || "CAN_RX_OVERFLOW_EVENT"
    || "CAN_SYSTEM_ERROR_EVENT"
    || "CAN_BUS_ERROR_EVENT"
    || "CAN_BUS_ACTIVITY_WAKEUP_EVENT"
    || "CAN_INVALID_RX_MESSAGE_EVENT"
    || "CAN_All_EVENTS"


enum CAN_ERROR_STATE
       "CAN_TX_RX_WARNING_STATE"
    || "CAN_RX_WARNING_STATE"
    || "CAN_TX_WARNING_STATE"
    || "CAN_RX_BUS_PASSIVE_STATE"
    || "CAN_TX_BUS_PASSIVE_STATE"
    || "CAN_TX_BUS_OFF_STATE"


enum CAN_FIFO_ELEMENT_BYTES
       "CAN_FIFO_8_BYTE"
    || "CAN_FIFO_12_BYTE"
    || "CAN_FIFO_16_BYTE"
    || "CAN_FIFO_20_BYTE"
    || "CAN_FIFO_24_BYTE"
    || "CAN_FIFO_32_BYTE"
    || "CAN_FIFO_48_BYTE"
    || "CAN_FIFO_64_BYTE"


enum CAN_TX_CHANNEL_STATUS
       "CAN_TX_CHANNEL_TRANSMITTING"
    || "CAN_TX_CHANNEL_ERROR"
    || "CAN_TX_CHANNEL_ARBITRATION_LOST"


enum CAN_FILTER_CONFIG
       "CAN_FILTER_CONFIG_DISABLED"
    || "CAN_FILTER_CONFIG_FIFO_0"
    || "CAN_FILTER_CONFIG_FIFO_1"
    || "CAN_FILTER_CONFIG_REJECT"
    || "CAN_FILTER_CONFIG_PRIORITY"
    || "CAN_FILTER_CONFIG_PRIORITY_FIFO_0"
    || "CAN_FILTER_CONFIG_PRIORITY_FIFO_1"


enum CAN_STD_FILTER_TYPE
       "CAN_STD_FILTER_RANGE"
    || "CAN_STD_FILTER_DUAL"
    || "CAN_STD_FILTER_CLASSIC"

enum CAN_EXT_FILTER_TYPE
       "CAN_EXT_FILTER_RANGE"
    || "CAN_EXT_FILTER_DUAL"
    || "CAN_EXT_FILTER_CLASSIC"
    || "CAN_EXT_FILTER_UNMASKED"

enum CAN_NOMATCH
       "Accept in RX FIFO 0"
    || "Accept in RX FIFO 0"
    || "Message Rejected"



menu "CAN"
    depends on HAVE_CAN

enum DRV_CAN_MODE
    "STATIC"

config USE_DRV_CAN
    bool "Use CAN Driver?"
    select DRIVER
    set SYS_CLK_PMC_SCER_PCK5 to y if USE_DRV_CAN
    set SYS_CLK_PMC_PCK5_CSS to "PLLA_CLK" if USE_DRV_CAN
    set SYS_CLK_PMC_PCK5_PRES to 5 if USE_DRV_CAN
    default n
    ---help---
    IDH_HTML_CAN_Peripheral_Library
    ---endhelp---

config DRV_CAN_DRIVER_MODE
    string "Driver Implementation"
    depends on USE_DRV_CAN
    range DRV_CAN_MODE
    default "STATIC"
    persistent
    ---help---
    IDH_HTML_CAN_Peripheral_Library
    ---endhelp---

config DRV_CAN_INSTANCES_NUMBER
    int "Number of CAN Driver Instances"
    depends on USE_DRV_CAN
    range 1 CAN_NUMBER_OF_MODULES
    default 1

source "$HARMONY_VERSION_PATH/framework/driver/can/config/drv_can_idx_pic32c.ftl" 4 instances

endmenu



ifblock USE_DRV_CAN

add "<#include \"/framework/driver/can/templates/drv_can_system_definitions_includes.h.ftl\">"  to list SYSTEM_DEFINITIONS_H_INCLUDES
add "<#include \"/framework/driver/can/templates/drv_can_static_pic32c.h.ftl\">"  to list SYSTEM_DEFINITIONS_H_INCLUDES
add "<#include \"/framework/driver/can/templates/drv_can_system_config.h.ftl\">"  to list SYSTEM_CONFIG_H_DRIVER_CONFIGURATION
add "<#include \"/framework/driver/can/templates/drv_can_system_init.c.ftl\">"  to list SYSTEM_INIT_C_SYS_INITIALIZE_DRIVERS

template DRV_CAN_MAPPING_C_FTL "$HARMONY_VERSION_PATH/framework/driver/can/templates/drv_can_mapping.c.ftl" to "$PROJECT_SOURCE_FILES/app/system_config/$CONFIGURATION/framework/driver/can/src/drv_can_mapping.c"

template DRV_CAN_STATIC_PIC32C_C "$HARMONY_VERSION_PATH/framework/driver/can/templates/drv_can_static_pic32c.c.ftl" to "$PROJECT_SOURCE_FILES/app/system_config/$CONFIGURATION/framework/driver/can/src/drv_can_static.c"
template DRV_CAN_STATIC_PIC32C_H "$HARMONY_VERSION_PATH/framework/driver/can/templates/drv_can_static_pic32c.h.ftl" to "$PROJECT_HEADER_FILES/app/system_config/$CONFIGURATION/framework/driver/can/drv_can_static.h"
template DRV_CAN_PIC32C_H "$HARMONY_VERSION_PATH/framework/driver/can/templates/drv_can_local_pic32c.h.ftl" to "$PROJECT_HEADER_FILES/app/system_config/$CONFIGURATION/framework/driver/can/src/drv_can_local_pic32c.h"

file DRV_CAN_H "$HARMONY_VERSION_PATH/framework/driver/can/drv_can.h" to "$PROJECT_HEADER_FILES/framework/driver/can/drv_can.h"
file DRV_CAN_DEF_H "$HARMONY_VERSION_PATH/framework/driver/can/drv_can_definitions_pic32c.h" to "$PROJECT_HEADER_FILES/framework/driver/can/drv_can_definitions_pic32c.h"


# Add MCAN Interrupt Handler to vector table
# list format is "vectors structure member name" "function symbol name"
ifblock (DRV_CAN_INTERRUPT_MODE_ID0) && (DRV_CAN_PERIPHERAL_ID_IDX0 = "CAN_ID_0")
add "pfnMCAN0_Handler ${CONFIG_DRV0_CAN_INTERRUPT_HANDLER_NAME}" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif

ifblock (DRV_CAN_INTERRUPT_MODE_ID0) && (DRV_CAN_PERIPHERAL_ID_IDX0 = "CAN_ID_1")
add "pfnMCAN1_Handler ${CONFIG_DRV0_CAN_INTERRUPT_HANDLER_NAME}" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif

ifblock (DRV_CAN_INTERRUPT_MODE_ID1) && (DRV_CAN_PERIPHERAL_ID_IDX1 = "CAN_ID_0")
add "pfnMCAN0_Handler ${CONFIG_DRV1_CAN_INTERRUPT_HANDLER_NAME}" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif

ifblock (DRV_CAN_INTERRUPT_MODE_ID1) && (DRV_CAN_PERIPHERAL_ID_IDX1 = "CAN_ID_1")
add "pfnMCAN1_Handler ${CONFIG_DRV1_CAN_INTERRUPT_HANDLER_NAME}" to list SYSTEM_STARTUP_PIC32C_INTERRUPT_HANDLERS
endif


endif

