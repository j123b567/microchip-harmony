<#--
/*******************************************************************************
  I2S Driver Freemarker Template File

  Company:
    Microchip Technology Inc.

  File Name:
    drv_i2s.ftl

  Summary:
    I2S Driver Freemarker Template File

  Description:

*******************************************************************************/

/*******************************************************************************
Copyright (c) 2014 released Microchip Technology Inc.  All rights reserved.

Microchip licenses to you the right to use, modify, copy and distribute
Software only when embedded on a Microchip microcontroller or digital signal
controller that is integrated into your product or third party product
(pursuant to the sublicense terms in the accompanying license agreement).

You should refer to the license agreement accompanying this Software for
additional information regarding your rights and obligations.

SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS  WITHOUT  WARRANTY  OF  ANY  KIND,
EITHER EXPRESS  OR  IMPLIED,  INCLUDING  WITHOUT  LIMITATION,  ANY  WARRANTY  OF
MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A  PARTICULAR  PURPOSE.
IN NO EVENT SHALL MICROCHIP OR  ITS  LICENSORS  BE  LIABLE  OR  OBLIGATED  UNDER
CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION,  BREACH  OF  WARRANTY,  OR
OTHER LEGAL  EQUITABLE  THEORY  ANY  DIRECT  OR  INDIRECT  DAMAGES  OR  EXPENSES
INCLUDING BUT NOT LIMITED TO ANY  INCIDENTAL,  SPECIAL,  INDIRECT,  PUNITIVE  OR
CONSEQUENTIAL DAMAGES, LOST  PROFITS  OR  LOST  DATA,  COST  OF  PROCUREMENT  OF
SUBSTITUTE  GOODS,  TECHNOLOGY,  SERVICES,  OR  ANY  CLAIMS  BY  THIRD   PARTIES
(INCLUDING BUT NOT LIMITED TO ANY DEFENSE  THEREOF),  OR  OTHER  SIMILAR  COSTS.
*******************************************************************************/
-->

/*** I2S Driver Configuration ***/


<#if CONFIG_USE_DRV_I2S ==  true>

#define DRV_I2S_CLIENTS_NUMBER					${CONFIG_DRV_I2S_CLIENTS_NUMBER}
#define DRV_I2S_INSTANCES_NUMBER				${CONFIG_DRV_I2S_INSTANCES_NUMBER}

<#assign i2sCombinedQueueSizeOfAllInstances = 0>

<#-- Instance 0 --> 
<#if CONFIG_DRV_I2S_INST_IDX0 == true>
#define DRV_I2S_SSC_INSTANCES_NUMBER            ${CONFIG_DRV_I2S_SSC_INSTANCES_NUMBER0}
#define DRV_I2S_SSC_CLIENTS_NUMBER              ${CONFIG_DRV_I2S_SSC_CLIENTS_NUMBER0}
#define DRV_I2S_PERIPHERAL_ID_IDX0              ${CONFIG_DRV_I2S_PERIPHERAL_ID_IDX0}
#define DRV_I2S_SSC_CLOCK_DIVIDER0				${CONFIG_DRV_I2S_SSC_CLOCK_DIVIDER0}
#define DRV_I2S_SSC_RX_CLOCK_SELECTION0			${CONFIG_DRV_I2S_SSC_RX_CLOCK_SELECTION0}
#define DRV_I2S_SSC_RX_CLOCK_OUTPUT_MODE0       ${CONFIG_DRV_I2S_SSC_RX_CLOCK_OUTPUT_MODE0}
#define DRV_I2S_SSC_RX_CLOCK_INVERSE0    		${CONFIG_DRV_I2S_SSC_RX_CLOCK_INVERSE0}
#define DRV_I2S_SSC_RX_CLOCK_GATING0			${CONFIG_DRV_I2S_SSC_RX_CLOCK_GATING0}
#define DRV_I2S_SSC_RX_START_SELECTION0			${CONFIG_DRV_I2S_SSC_RX_START_SELECTION0}
#define DRV_I2S_SSC_RX_LOOPMODE0    			${CONFIG_DRV_I2S_SSC_RX_LOOPMODE0}
#define DRV_I2S_SSC_RX_START_DELAY0     		${CONFIG_DRV_I2S_SSC_RX_START_DELAY0}
#define DRV_I2S_SSC_RX_PERIOD_DIVIDER_SELECTION0    ${CONFIG_DRV_I2S_SSC_RX_PERIOD_DIVIDER_SELECTION0}
#define DRV_I2S_SSC_RX_DATA_LENGTH0    			${CONFIG_DRV_I2S_SSC_RX_DATA_LENGTH0}
#define DRV_I2S_SSC_RX_MSBFIRST0     		    ${CONFIG_DRV_I2S_SSC_RX_MSBFIRST0}
#define DRV_I2S_SSC_RX_FS_LENGTH0    			${CONFIG_DRV_I2S_SSC_RX_FS_LENGTH0}
#define DRV_I2S_SSC_RX_DATA_NUM_PER_FRAME0	    ${CONFIG_DRV_I2S_SSC_RX_DATA_NUM_PER_FRAME0}
#define DRV_I2S_SSC_RX_FS_OUTPUT_SELECTION0		${CONFIG_DRV_I2S_SSC_RX_FS_OUTPUT_SELECTION0}
#define DRV_I2S_SSC_RX_FS_EDGEDETECTION0	    ${CONFIG_DRV_I2S_SSC_RX_FS_EDGEDETECTION0}

#define DRV_I2S_SSC_TX_CLOCK_SELECTION0			${CONFIG_DRV_I2S_SSC_TX_CLOCK_SELECTION0}
#define DRV_I2S_SSC_TX_CLOCK_OUTPUT_MODE0       ${CONFIG_DRV_I2S_SSC_TX_CLOCK_OUTPUT_MODE0}
#define DRV_I2S_SSC_TX_CLOCK_INVERSE0    		${CONFIG_DRV_I2S_SSC_TX_CLOCK_INVERSE0}
#define DRV_I2S_SSC_TX_CLOCK_GATING0			${CONFIG_DRV_I2S_SSC_TX_CLOCK_GATING0}
#define DRV_I2S_SSC_TX_START_SELECTION0			${CONFIG_DRV_I2S_SSC_TX_START_SELECTION0}
#define DRV_I2S_SSC_TX_START_DELAY0    			${CONFIG_DRV_I2S_SSC_TX_START_DELAY0}
#define DRV_I2S_SSC_TX_PERIOD_DIVIDER_SELECTION0    ${CONFIG_DRV_I2S_SSC_TX_PERIOD_DIVIDER_SELECTION0}
#define DRV_I2S_SSC_TX_DATA_LENGTH0    			${CONFIG_DRV_I2S_SSC_TX_DATA_LENGTH0}
#define DRV_I2S_SSC_TX_DEFAULTDATA0    		    ${CONFIG_DRV_I2S_SSC_TX_DEFAULTDATA0}
#define DRV_I2S_SSC_TX_MSBFIRST0    			${CONFIG_DRV_I2S_SSC_TX_MSBFIRST0}
#define DRV_I2S_SSC_TX_DATA_NUM_PER_FRAME0	    ${CONFIG_DRV_I2S_SSC_TX_DATA_NUM_PER_FRAME0}
#define DRV_I2S_SSC_TX_FS_LENGTH0    			${CONFIG_DRV_I2S_SSC_TX_FS_LENGTH0}
#define DRV_I2S_SSC_TX_FS_OUTPUT_SELECTION0	    ${CONFIG_DRV_I2S_SSC_TX_FS_OUTPUT_SELECTION0}
#define DRV_DRV_I2S_SSC_TX_FS_DATAEN0   		${CONFIG_DRV_I2S_SSC_TX_FS_DATAEN0}
#define DRV_I2S_SSC_TX_FS_EDGEDETECTION0	    ${CONFIG_DRV_I2S_SSC_TX_FS_EDGEDETECTION0}
#define DRV_I2S_SSC_TX_FSLENGTH_EXTENSION0	    ${CONFIG_DRV_I2S_SSC_TX_FSLENGTH_EXTENSION0}

<#if CONFIG_DRV_I2S_DMA_INTERRUPTS_ENABLE == true>

#define DRV_I2S_TX_DMA_SOURCE_IDX0				XDMAC_IRQn
#define DRV_I2S_TX_DMA_TRIGGER                  DMA_TRIGGER_SSC_TX
#define DRV_I2S_RX_DMA_TRIGGER                  DMA_TRIGGER_SSC_RX

<#-- TX DMA Channel Interuppt --> 
<#if CONFIG_DRV_I2S_TX_DMA_CHANNEL_IDX0 == "0">
#define DRV_I2S_TX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX0}
<#assign DRV_I2S_TX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX0> 
</#if>
<#if CONFIG_DRV_I2S_TX_DMA_CHANNEL_IDX0 == "1">
#define DRV_I2S_TX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX1}
<#assign DRV_I2S_TX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX1> 
</#if>
<#if CONFIG_DRV_I2S_TX_DMA_CHANNEL_IDX0 == "2">
#define DRV_I2S_TX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX2}
<#assign DRV_I2S_TX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX2> 
</#if>
<#if CONFIG_DRV_I2S_TX_DMA_CHANNEL_IDX0 == "3">
#define DRV_I2S_TX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX3}
<#assign DRV_I2S_TX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX3>
</#if> 
<#if CONFIG_DRV_I2S_TX_DMA_CHANNEL_IDX0 == "4">
#define DRV_I2S_TX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX4}
<#assign DRV_I2S_TX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX4> 
</#if>
<#if CONFIG_DRV_I2S_TX_DMA_CHANNEL_IDX0 == "5">
#define DRV_I2S_TX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX5}
<#assign DRV_I2S_TX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX5> 
</#if>
<#-- RX DMA Channel Interuppt --> 
<#if CONFIG_DRV_I2S_RX_DMA_CHANNEL_IDX0 == "0">
#define DRV_I2S_RX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX0}
<#assign DRV_I2S_RX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX0> 
</#if>
<#if CONFIG_DRV_I2S_RX_DMA_CHANNEL_IDX0 == "1">
#define DRV_I2S_RX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX1}
<#assign DRV_I2S_RX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX1> 
</#if>
<#if CONFIG_DRV_I2S_RX_DMA_CHANNEL_IDX0 == "2">
#define DRV_I2S_RX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX2}
<#assign DRV_I2S_RX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX2> 
</#if>
<#if CONFIG_DRV_I2S_RX_DMA_CHANNEL_IDX0 == "3">
#define DRV_I2S_RX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX3}
<#assign DRV_I2S_RX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX3>
</#if> 
<#if CONFIG_DRV_I2S_RX_DMA_CHANNEL_IDX0 == "4">
#define DRV_I2S_RX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX4}
<#assign DRV_I2S_RX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX4> 
</#if>
<#if CONFIG_DRV_I2S_RX_DMA_CHANNEL_IDX0 == "5">
#define DRV_I2S_RX_DMA_CHANNEL_IDX0				${CONFIG_SYS_DMA_CHANNEL_ID_IDX5}
<#assign DRV_I2S_RX_DMA_CHANNEL_INT_SRC_IDX0 = CONFIG_SYS_DMA_CHANNEL_ID_IDX5> 
</#if>

</#if>

#define QUEUE_SIZE_TX_IDX0                      ${CONFIG_QUEUE_SIZE_TX_IDX0}
#define QUEUE_SIZE_RX_IDX0                      ${CONFIG_QUEUE_SIZE_RX_IDX0}
<#assign i2sCombinedQueueSizeOfAllInstances = i2sCombinedQueueSizeOfAllInstances + CONFIG_QUEUE_SIZE_TX_IDX0?number >
<#assign i2sCombinedQueueSizeOfAllInstances = i2sCombinedQueueSizeOfAllInstances + CONFIG_QUEUE_SIZE_RX_IDX0?number>

#define DRV_I2S_POWER_STATE_IDX0				${CONFIG_DRV_I2S_POWER_STATE_IDX0}
</#if> 

#define DRV_I2S_QUEUE_DEPTH_COMBINED     		${i2sCombinedQueueSizeOfAllInstances}
</#if>
<#--
/*******************************************************************************
 End of File
*/
-->
